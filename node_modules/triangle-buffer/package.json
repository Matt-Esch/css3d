{
  "name": "triangle-buffer",
  "version": "0.1.6",
  "description": "A DOM based 3D triangle renderer",
  "keywords": [
    "triangle",
    "3D",
    "DOM",
    "render",
    "rendering"
  ],
  "author": {
    "name": "Matt-Esch",
    "email": "matt@mattesch.info"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Matt-Esch/triangle-buffer.git"
  },
  "main": "index",
  "homepage": "https://github.com/Matt-Esch/triangle-buffer",
  "contributors": [
    {
      "name": "Matt Esch"
    }
  ],
  "bugs": {
    "url": "https://github.com/Matt-Esch/triangle-buffer/issues",
    "email": "matt@mattesch.info"
  },
  "dependencies": {
    "numeric": "~1.2.6",
    "firstkey": "0.1.0",
    "triangle-homography": "0.1.0"
  },
  "devDependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Matt-Esch/triangle-buffer/raw/master/LICENSE"
    }
  ],
  "readme": "# triangle-buffer\n\nA DOM based 3D triangle renderer\n\n## Example\n\n\n```js\n// Create a viewport with fovy PI/2\n// and update body on window resize\n\nvar Viewport = require('css-viewport'),\n    createBuffer = require('triangle-buffer');\n\n\nvar v = new Viewport(Math.PI/2);\n\nwindow.onresize = updatePerspective;\nupdatePerspective();\n\nfunction updatePerspective() {\n    v.update(document.body);\n};\n\n// Create a triangle buffer using body and viewport v\ntriangleBuffer = createBuffer(document.body, v);\n\n// And render some triangles\ntriangleBuffer.begin();\ntriangleBuffer.drawTriangle([\n    [0,0,0],\n    [0,50,50],\n    [50,50,0]\n]);\ntriangleBuffer.end();\n```\n\n## Installation\n\n`npm install triangle-buffer`\n\n## Contributors\n\n - Matt-Esch\n\n## MIT Licenced\n\n",
  "readmeFilename": "README.md",
  "_id": "triangle-buffer@0.1.6",
  "_from": "triangle-buffer@latest"
}
